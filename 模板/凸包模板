struct pt{
    double x, y;
    bool operator < (pt b)const{
        return y < b.y || (y == b.y) && x < b.x;
    }
}dot[N], data[N];
double dis(pt a, pt b){
    return sqrt((a.x-b.x)*(a.x-b.x) + (a.y-b.y)*(a.y-b.y));
}
double cromul(pt a, pt b, pt c){ //ab Ã— ac
    return (b.x-a.x)*(c.y-a.y) - (c.x-a.x)*(b.y-a.y);
}
double Convex(int n){
    int top = 1;
    sort(data, data+n);
    for(int i = 0; i <= 2; ++i){
        if(n == i) return i;
        dot[i] = data[i];
    }

    for(int i = 2; i < n; ++i){
        while(top && cromul(dot[top-1], data[i], dot[top]) > 0) top -= 1;
        dot[++top] = data[i];
    }
    int len = top;
    dot[++top] = data[n-2];
    for(int i = n - 3; i >= 0; --i){
        while(top != len && cromul(dot[top-1], data[i], dot[top]) > 0 ) top -= 1;
        dot[++top] = data[i];
    }
    double ans = 0;

    return ans;
}
